services:
  db:
    image: postgres:17
    container_name: projet_universite_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: projet_universite
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    # 1) On attache un volume nommé (db-data) à /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: projet_universite_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres@db:5432/projet_universite
      - NODE_ENV=production
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    image: node:18
    container_name: projet_universite_frontend
    working_dir: /app
    environment:
      - REACT_APP_API_URL=http://backend:5001
      - CHOKIDAR_USEPOLLING=true
      - HOST=0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm install axios --save && npm start"


# 2) On déclare le volume nommé (db-data) en bas du fichier
volumes:
  db-data:
